// generated by stringer -type=ResultCode resultcode.go; DO NOT EDIT

package ldap

import "fmt"

const (
	_ResultCode_name_0 = "ResultSuccessResultOperationsErrorResultProtocolErrorResultTimeLimitExceededResultSizeLimitExceededResultCompareFalseResultCompareTrueResultAuthMethodNotSupportedResultStrongAuthRequired"
	_ResultCode_name_1 = "ResultReferralResultAdminLimitExceededResultUnavailableCriticalExtensionResultConfidentialityRequiredResultSaslBindInProgress"
	_ResultCode_name_2 = "ResultNoSuchAttributeResultUndefinedAttributeTypeResultInappropriateMatchingResultConstraintViolationResultAttributeOrValueExistsResultInvalidAttributeSyntax"
	_ResultCode_name_3 = "ResultNoSuchObjectResultAliasProblemResultInvalidDNSyntax"
	_ResultCode_name_4 = "ResultAliasDereferencingProblem"
	_ResultCode_name_5 = "ResultInappropriateAuthenticationResultInvalidCredentialsResultInsufficientAccessRightsResultBusyResultUnavailableResultUnwillingToPerformResultLoopDetect"
	_ResultCode_name_6 = "ResultNamingViolationResultObjectClassViolationResultNotAllowedOnNonLeafResultNotAllowedOnRDNResultEntryAlreadyExistsResultObjectClassModsProhibited"
	_ResultCode_name_7 = "ResultAffectsMultipleDSAs"
	_ResultCode_name_8 = "ResultOther"
)

var (
	_ResultCode_index_0 = [...]uint8{0, 13, 34, 53, 76, 99, 117, 134, 162, 186}
	_ResultCode_index_1 = [...]uint8{0, 14, 38, 72, 101, 125}
	_ResultCode_index_2 = [...]uint8{0, 21, 49, 76, 101, 129, 157}
	_ResultCode_index_3 = [...]uint8{0, 18, 36, 57}
	_ResultCode_index_4 = [...]uint8{0, 31}
	_ResultCode_index_5 = [...]uint8{0, 33, 57, 87, 97, 114, 138, 154}
	_ResultCode_index_6 = [...]uint8{0, 21, 47, 72, 93, 117, 148}
	_ResultCode_index_7 = [...]uint8{0, 25}
	_ResultCode_index_8 = [...]uint8{0, 11}
)

func (i ResultCode) String() string {
	switch {
	case 0 <= i && i <= 8:
		return _ResultCode_name_0[_ResultCode_index_0[i]:_ResultCode_index_0[i+1]]
	case 10 <= i && i <= 14:
		i -= 10
		return _ResultCode_name_1[_ResultCode_index_1[i]:_ResultCode_index_1[i+1]]
	case 16 <= i && i <= 21:
		i -= 16
		return _ResultCode_name_2[_ResultCode_index_2[i]:_ResultCode_index_2[i+1]]
	case 32 <= i && i <= 34:
		i -= 32
		return _ResultCode_name_3[_ResultCode_index_3[i]:_ResultCode_index_3[i+1]]
	case i == 36:
		return _ResultCode_name_4
	case 48 <= i && i <= 54:
		i -= 48
		return _ResultCode_name_5[_ResultCode_index_5[i]:_ResultCode_index_5[i+1]]
	case 64 <= i && i <= 69:
		i -= 64
		return _ResultCode_name_6[_ResultCode_index_6[i]:_ResultCode_index_6[i+1]]
	case i == 71:
		return _ResultCode_name_7
	case i == 80:
		return _ResultCode_name_8
	default:
		return fmt.Sprintf("ResultCode(%d)", i)
	}
}
